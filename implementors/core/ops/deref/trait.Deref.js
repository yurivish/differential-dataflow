(function() {var implementors = {};
implementors["abomonation"] = [{text:"impl&lt;T:&nbsp;<a class=\"trait\" href=\"abomonation/trait.Abomonation.html\" title=\"trait abomonation::Abomonation\">Abomonation</a>, S:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a>&lt;Target = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a><a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">]</a>&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"abomonation/abomonated/struct.Abomonated.html\" title=\"struct abomonation::abomonated::Abomonated\">Abomonated</a>&lt;T, S&gt;",synthetic:false,types:["abomonation::abomonated::Abomonated"]},];
implementors["differential_dataflow"] = [{text:"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"differential_dataflow/hashable/trait.Hashable.html\" title=\"trait differential_dataflow::hashable::Hashable\">Hashable</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"differential_dataflow/hashable/struct.OrdWrapper.html\" title=\"struct differential_dataflow::hashable::OrdWrapper\">OrdWrapper</a>&lt;T&gt;",synthetic:false,types:["differential_dataflow::hashable::OrdWrapper"]},{text:"impl&lt;T:&nbsp;<a class=\"trait\" href=\"differential_dataflow/hashable/trait.Hashable.html\" title=\"trait differential_dataflow::hashable::Hashable\">Hashable</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"differential_dataflow/hashable/struct.HashableWrapper.html\" title=\"struct differential_dataflow::hashable::HashableWrapper\">HashableWrapper</a>&lt;T&gt;",synthetic:false,types:["differential_dataflow::hashable::HashableWrapper"]},{text:"impl&lt;T:&nbsp;<a class=\"trait\" href=\"timely_sort/trait.Unsigned.html\" title=\"trait timely_sort::Unsigned\">Unsigned</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"differential_dataflow/hashable/struct.UnsignedWrapper.html\" title=\"struct differential_dataflow::hashable::UnsignedWrapper\">UnsignedWrapper</a>&lt;T&gt;",synthetic:false,types:["differential_dataflow::hashable::UnsignedWrapper"]},{text:"impl&lt;'a, G:&nbsp;<a class=\"trait\" href=\"timely/dataflow/scopes/trait.Scope.html\" title=\"trait timely::dataflow::scopes::Scope\">Scope</a>, D:&nbsp;<a class=\"trait\" href=\"differential_dataflow/trait.Data.html\" title=\"trait differential_dataflow::Data\">Data</a>, R:&nbsp;<a class=\"trait\" href=\"differential_dataflow/difference/trait.Diff.html\" title=\"trait differential_dataflow::difference::Diff\">Diff</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"differential_dataflow/operators/iterate/struct.Variable.html\" title=\"struct differential_dataflow::operators::iterate::Variable\">Variable</a>&lt;'a, G, D, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G::<a class=\"type\" href=\"timely/dataflow/scopes/trait.ScopeParent.html#associatedtype.Timestamp\" title=\"type timely::dataflow::scopes::ScopeParent::Timestamp\">Timestamp</a>: <a class=\"trait\" href=\"differential_dataflow/lattice/trait.Lattice.html\" title=\"trait differential_dataflow::lattice::Lattice\">Lattice</a>,&nbsp;</span>",synthetic:false,types:["differential_dataflow::operators::iterate::Variable"]},{text:"impl&lt;'a, G:&nbsp;<a class=\"trait\" href=\"timely/dataflow/scopes/trait.Scope.html\" title=\"trait timely::dataflow::scopes::Scope\">Scope</a>, D:&nbsp;<a class=\"trait\" href=\"differential_dataflow/trait.Data.html\" title=\"trait differential_dataflow::Data\">Data</a>, R:&nbsp;<a class=\"trait\" href=\"differential_dataflow/difference/trait.Diff.html\" title=\"trait differential_dataflow::difference::Diff\">Diff</a>, T:&nbsp;<a class=\"trait\" href=\"timely/progress/timestamp/trait.Timestamp.html\" title=\"trait timely::progress::timestamp::Timestamp\">Timestamp</a> + <a class=\"trait\" href=\"differential_dataflow/lattice/trait.Lattice.html\" title=\"trait differential_dataflow::lattice::Lattice\">Lattice</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"differential_dataflow/operators/iterate/struct.CoreVariable.html\" title=\"struct differential_dataflow::operators::iterate::CoreVariable\">CoreVariable</a>&lt;'a, G, D, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G::<a class=\"type\" href=\"timely/dataflow/scopes/trait.ScopeParent.html#associatedtype.Timestamp\" title=\"type timely::dataflow::scopes::ScopeParent::Timestamp\">Timestamp</a>: <a class=\"trait\" href=\"differential_dataflow/lattice/trait.Lattice.html\" title=\"trait differential_dataflow::lattice::Lattice\">Lattice</a>,&nbsp;</span>",synthetic:false,types:["differential_dataflow::operators::iterate::CoreVariable"]},];
implementors["timely"] = [{text:"impl&lt;'a, T:&nbsp;<a class=\"trait\" href=\"timely/order/trait.PartialOrder.html\" title=\"trait timely::order::PartialOrder\">PartialOrder</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"timely/progress/frontier/struct.AntichainRef.html\" title=\"struct timely::progress::frontier::AntichainRef\">AntichainRef</a>&lt;'a, T&gt;",synthetic:false,types:["timely::progress::frontier::AntichainRef"]},{text:"impl&lt;T:&nbsp;<a class=\"trait\" href=\"timely/progress/timestamp/trait.Timestamp.html\" title=\"trait timely::progress::timestamp::Timestamp\">Timestamp</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"timely/dataflow/operators/struct.Capability.html\" title=\"struct timely::dataflow::operators::Capability\">Capability</a>&lt;T&gt;",synthetic:false,types:["timely::dataflow::operators::capability::Capability"]},{text:"impl&lt;'cap, T:&nbsp;<a class=\"trait\" href=\"timely/progress/timestamp/trait.Timestamp.html\" title=\"trait timely::progress::timestamp::Timestamp\">Timestamp</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"timely/dataflow/operators/struct.CapabilityRef.html\" title=\"struct timely::dataflow::operators::CapabilityRef\">CapabilityRef</a>&lt;'cap, T&gt;",synthetic:false,types:["timely::dataflow::operators::capability::CapabilityRef"]},{text:"impl&lt;D:&nbsp;<a class=\"trait\" href=\"abomonation/trait.Abomonation.html\" title=\"trait abomonation::Abomonation\">Abomonation</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"enum\" href=\"timely/dataflow/channels/message/enum.Content.html\" title=\"enum timely::dataflow::channels::message::Content\">Content</a>&lt;D&gt;",synthetic:false,types:["timely::dataflow::channels::message::Content"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
